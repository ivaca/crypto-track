{"version":3,"sources":["components/search-input/search-input.component.jsx","redux/search/search.actions.js","redux/coins/coins.selectors.js","components/coin/coin.component.jsx","redux/currency/currency.selectors.js","redux/coins/coins.types.js","redux/coins/coins.actions.js","components/currency-list/currency-list.component.jsx","redux/search/search.selectors.js","components/pages/homepage/homepage.component.jsx","redux/currency/currency.types.js","utils/Listener.js","redux/currency/currency.actions.js","App.js","redux/coins/coins.utils.js","redux/coins/coins.reducer.js","redux/search/search.reducers.js","redux/currency/currency.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["connect","dispatch","changeText","text","type","payload","className","placeholder","onChange","e","target","value","selectCoin","state","coins","data","createSelector","ownProps","coin","coinName","currency","find","FROMSYMBOL","filtered","PRICE","selectListOfCurrencys","CoinsActionTypes","ADD_COIN","addCoin","mapStateToProps","createStructuredSelector","searchText","search","isSearched","used","currencyList","toggleUsed","filter","includes","toUpperCase","length","map","Homepage","React","Component","CurrencyActionTypes","ADD_CURRENCY","Listener","addCurrency","a","fetch","then","response","json","currencyArray","Data","CoinInfo","Name","setState","subOpen","action","subs","init","socket","onopen","console","log","send","JSON","stringify","onmessage","event","parse","TYPE","this","WebSocket","call","App","newCoin","i","push","INITIAL_STATE","coinReducer","searchReducer","currencyReducer","persistConfig","key","storage","blacklist","whitelist","rootReducer","combineReducers","persistReducer","middlewares","logger","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5db98cba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./search-input.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { changeText } from \"../../redux/search/search.actions\";\r\nconst SearchInput = ({ changeText }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"search-input\"\r\n        placeholder=\"Ex. Bitcoin\"\r\n        onChange={(e) => changeText(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeText: (text) => dispatch(changeText(text)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(SearchInput);\r\n","export const changeText = (text) => ({\r\n  type: \"CHANGE_TEXT\",\r\n  payload: text,\r\n});\r\n\r\nexport const toggleUsed = () => ({\r\n  type: \"TOGGLE_USED\",\r\n});\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectCoin = (state) => state.coins.data;\r\nexport const selectCoins = createSelector([selectCoin], (coins) => coins);\r\nexport const selectCoinByName = (coinName) => {\r\n  return createSelector([selectCoin], (coins) =>\r\n    coins.find((coin) => coin.FROMSYMBOL === coinName)\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./coin.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectCoinByName } from \"../../redux/coins/coins.selectors\";\r\n\r\nconst Coin = ({ coin, filtered }) => {\r\n  if (coin) {\r\n    let { FROMSYMBOL, PRICE } = coin;\r\n    return (\r\n      <div className={`coin${filtered ? \"-no-anim\" : \"\"}`}>\r\n        <div className=\"coin-name\">{FROMSYMBOL}</div>\r\n        <div className=\"coin-price\">$ {PRICE ? PRICE : \"-\"}</div>\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  coin: selectCoinByName(ownProps.currency)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Coin);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectCurrencys = (state) => state.currency;\r\n\r\nexport const selectListOfCurrencys = createSelector(\r\n  [selectCurrencys],\r\n  (currency) => currency.data\r\n);\r\n","const CoinsActionTypes = {\r\n  ADD_COIN: \"ADD_COIN\",\r\n};\r\n\r\nexport default CoinsActionTypes;\r\n","import CoinsActionTypes from \"./coins.types\";\r\n\r\nexport const addCoin = (coin) => ({\r\n  type: CoinsActionTypes.ADD_COIN,\r\n  payload: coin,\r\n});\r\n","import React from \"react\";\r\nimport \"./currency-list.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport Coin from \"../coin/coin.component\";\r\n\r\nimport {\r\n  selectSearchText,\r\n  selectUseStatus,\r\n} from \"../../redux/search/search.selectors\";\r\nimport { selectListOfCurrencys } from \"../../redux/currency/currency.selectors\";\r\nimport { toggleUsed } from \"../../redux/search/search.actions\";\r\nimport { addCoin } from \"../../redux/coins/coins.actions\";\r\nconst CurrencyList = ({ searchText, currencyList, toggleUsed, isSearched }) => {\r\n  return (\r\n    <div className=\"currency-list\">\r\n      {currencyList\r\n        .filter((coin) =>\r\n          coin.includes(searchText.toUpperCase()) || !searchText.length\r\n            ? coin\r\n            : null\r\n        )\r\n        .map((coin) =>\r\n          searchText.length || isSearched ? (\r\n            (toggleUsed(), (<Coin currency={coin} filtered key={coin} />))\r\n          ) : (\r\n            <Coin currency={coin} key={coin} />\r\n          )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  searchText: selectSearchText,\r\n  isSearched: selectUseStatus,\r\n  currencyList: selectListOfCurrencys,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCoin: (coin) => dispatch(addCoin(coin)),\r\n  toggleUsed: () => dispatch(toggleUsed()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyList);\r\n","export const selectSearchText = (state) => state.search.searchText;\r\nexport const selectUseStatus = (state) => state.search.used;\r\n","import React from \"react\";\r\nimport SearchInput from \"../../search-input/search-input.component\";\r\nimport CurrencyList from \"../../currency-list/currency-list.component\";\r\nimport \"./homepage.styles.scss\";\r\n\r\nclass Homepage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <SearchInput />\r\n        <CurrencyList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;\r\n","const CurrencyActionTypes = {\r\n  ADD_CURRENCY: \"ADD_CURRENCY\",\r\n};\r\n\r\nexport default CurrencyActionTypes;\r\n","import { addCoin } from \"../redux/coins/coins.actions\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectListOfCurrencys } from \"../redux/currency/currency.selectors\";\r\nimport { addCurrency } from \"../redux/currency/currency.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nclass Listener extends React.Component {\r\n  constructor({ addCoin, currencyList, addCurrency }) {\r\n    super();\r\n    this.state = {\r\n      addCoin,\r\n      currencyList,\r\n      addCurrency,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch(\r\n      `https://min-api.cryptocompare.com/data/top/price?limit=30&tsym=USD`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let currencyArray = data.Data.map((coin) => coin.CoinInfo.Name);\r\n        this.state.addCurrency(currencyArray);\r\n\r\n        this.setState({\r\n          subOpen: {\r\n            action: \"SubAdd\",\r\n            subs: currencyArray.map((coin) => `5~CCCAGG~${coin}~USD`),\r\n          },\r\n        });\r\n      });\r\n    const init = () => {\r\n      let { socket, subOpen } = this.state;\r\n\r\n      socket.onopen = function (e) {\r\n        console.log(subOpen);\r\n        socket.send(JSON.stringify(subOpen));\r\n      };\r\n      const addCoin = (coin) => this.state.addCoin(coin);\r\n      socket.onmessage = function (event) {\r\n        const data = JSON.parse(event.data);\r\n\r\n        if (data.TYPE === \"5\") addCoin(data);\r\n      };\r\n    };\r\n    this.setState(\r\n      {\r\n        socket: new WebSocket(\r\n          \"wss://streamer.cryptocompare.com/v2?api_key=3fcfffe50f77167f3cd04dbad295184f5ac956da429af743be8116d3b6ab6bd3\"\r\n        ),\r\n      },\r\n      () => init.call()\r\n    );\r\n  }\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    return <></>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCoin: (coin) => dispatch(addCoin(coin)),\r\n  addCurrency: (currency) => dispatch(addCurrency(currency)),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currencyList: selectListOfCurrencys,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Listener);\r\n","import CurrencyActionTypes from \"./currency.types\";\r\n\r\nexport const addCurrency = (currency) => ({\r\n  type: CurrencyActionTypes.ADD_CURRENCY,\r\n  payload: currency,\r\n});\r\n","import \"./App.css\";\nimport Homepage from \"./components/pages/homepage/homepage.component\";\n\nimport Listener from \"./utils/Listener\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Listener />\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","export const addCoin = (coins, newCoin) => {\r\n  for (let i = 0; i < coins.length; i++) {\r\n    if (coins[i].FROMSYMBOL === newCoin.FROMSYMBOL) {\r\n      coins[i] = { ...coins[i], ...newCoin };\r\n      // Object.assign(coins[i], newCoin);\r\n      return coins;\r\n    }\r\n  }\r\n  console.log(coins);\r\n  coins.push(newCoin);\r\n  return coins;\r\n};\r\n","import { addCoin } from \"./coins.utils\";\r\nimport CoinsActionTypes from \"./coins.types\";\r\n\r\nconst INITIAL_STATE = { data: [] };\r\n\r\nconst coinReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CoinsActionTypes.ADD_COIN:\r\n      return { data: addCoin(state.data, action.payload) };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default coinReducer;\r\n","import { changeSearchText } from \"./search.utils\";\r\nconst INITIAL_STATE = { searchText: \"\", used: false };\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_TEXT\":\r\n      return { ...state, searchText: changeSearchText(action.payload) };\r\n    case \"TOGGLE_USED\":\r\n      return { ...state, used: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import CurrencyActionTypes from \"./currency.types\";\r\n\r\nconst INITIAL_STATE = { data: [] };\r\n\r\nconst currencyReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrencyActionTypes.ADD_CURRENCY:\r\n      return { ...state, data: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default currencyReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport coinReducer from \"./coins/coins.reducer\";\r\nimport searchReducer from \"./search/search.reducers\";\r\nimport currencyReducer from \"./currency/currency.reducer\";\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"search\", \"currency\"],\r\n  whitelist: [\"coins\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  coins: coinReducer,\r\n  search: searchReducer,\r\n  currency: currencyReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport const persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}