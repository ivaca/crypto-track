{"version":3,"sources":["components/pages/homepage/search-input/search-input.component.jsx","redux/search/search.actions.js","redux/coins/coins.selectors.js","components/pages/homepage/coin/coin.component.jsx","redux/currency/currency.selectors.js","redux/coins/coins.types.js","redux/coins/coins.actions.js","components/pages/homepage/currency-list/currency-list.component.jsx","redux/search/search.selectors.js","components/pages/homepage/homepage.component.jsx","redux/coin/coin.selectors.js","components/pages/coinpage/coin-info/coin-info.component.jsx","components/pages/coinpage/coin-chart/coin-chart.settings.js","components/pages/coinpage/coin-chart/coin-chart.component.jsx","components/pages/coinpage/coin-chart/coin-chart.container.jsx","components/pages/coinpage/coin-chart-filter/coin-chart-filter.component.jsx","redux/coin/coin.types.js","redux/coin/coin.actions.js","components/pages/coinpage/coinpage.component.jsx","redux/currency/currency.types.js","utils/Listener.js","redux/currency/currency.actions.js","components/pages/homepage/header/header.component.jsx","App.js","redux/coins/coins.utils.js","redux/coins/coins.reducer.js","redux/coin/coin.reducer.js","redux/search/search.reducers.js","redux/currency/currency.reducer.js","redux/root-reducer.js","redux/coin/coin.sagas.js","redux/store.js","index.js"],"names":["connect","dispatch","changeText","text","type","payload","className","placeholder","onChange","e","target","value","selectCoin","state","coins","data","createSelector","ownProps","coin","coinName","currency","find","FROMSYMBOL","filtered","history","PRICE","ImageUrl","onClick","push","src","selectListOfCurrencys","CoinsActionTypes","ADD_COIN","addCoin","mapStateToProps","createStructuredSelector","searchText","search","isSearched","used","currencyList","toggleUsed","props","console","log","filter","includes","toUpperCase","length","map","key","Homepage","selectCoinHistoryData","dataLine","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","defaultFontColor","pointRadius","scaleFontSize","pointHitRadius","options","responsive","maintainAspectRatio","elements","point","radius","hitRadius","hoverRadius","legend","display","scales","xAxes","gridLines","color","ticks","fontFamily","yAxes","zeroLineColor","defaults","global","Coinchart","width","height","chart","useRef","current","chartInstance","update","ref","chartData","time","price","coinData","i","date","Date","toDateString","split","timestampToDate","close","slice","loadChartData","CoinFilter","useState","setFilter","tabindex","CoinActionTypes","FETCH_COIN_REQUESTED","FETCH_COIN_FAILED","FETCH_COIN_SUCCEEDED","fetchCoinSucceeded","fetchCoin","match","useEffect","params","name","CurrencyActionTypes","ADD_CURRENCY","Listener","addCurrency","a","fetch","then","response","json","currencyArray","Data","CoinInfo","Name","subs","setState","subOpen","action","subClose","init","socket","onopen","send","JSON","stringify","onmessage","event","parse","TYPE","this","WebSocket","call","React","Component","Header","to","App","path","component","exact","Coinpage","newCoin","INITIAL_STATE","coinReducer","message","searchReducer","currencyReducer","persistConfig","storage","blacklist","whitelist","rootReducer","combineReducers","coinsReducer","persistReducer","fetchCoinAsync","fetchCoinStart","put","error","takeEvery","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74bebe51.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./search-input.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { changeText } from \"../../../../redux/search/search.actions\";\r\nconst SearchInput = ({ changeText }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"search-input\"\r\n        placeholder=\"Ex. Bitcoin\"\r\n        onChange={(e) => changeText(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeText: (text) => dispatch(changeText(text)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(SearchInput);\r\n","export const changeText = (text) => ({\r\n  type: \"CHANGE_TEXT\",\r\n  payload: text,\r\n});\r\n\r\nexport const toggleUsed = () => ({\r\n  type: \"TOGGLE_USED\",\r\n});\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectCoin = (state) => state.coins.data;\r\nexport const selectCoins = createSelector([selectCoin], (coins) => coins);\r\nexport const selectCoinByName = (coinName) => {\r\n  return createSelector([selectCoin], (coins) =>\r\n    coins.find((coin) => coin.FROMSYMBOL === coinName)\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./coin.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { selectCoinByName } from \"../../../../redux/coins/coins.selectors\";\r\n\r\nconst Coin = ({ coin, filtered, history }) => {\r\n  if (coin) {\r\n    let { FROMSYMBOL, PRICE, ImageUrl } = coin;\r\n    return (\r\n      <div\r\n        className={`coin${filtered ? \"-no-anim\" : \"\"}`}\r\n        onClick={() => {\r\n          history.push(`/crypto-track/coin/${FROMSYMBOL}`);\r\n        }}\r\n      >\r\n        <div className=\"coin-img\">\r\n          <img src={`https://www.cryptocompare.com${ImageUrl}`} />\r\n        </div>\r\n        <div className=\"coin-name\">{FROMSYMBOL}</div>\r\n        <div className=\"coin-price\">$ {PRICE ? PRICE : \"-\"}</div>\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  coin: selectCoinByName(ownProps.currency)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Coin);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectCurrencys = (state) => state.currency;\r\n\r\nexport const selectListOfCurrencys = createSelector(\r\n  [selectCurrencys],\r\n  (currency) => currency.data\r\n);\r\n","const CoinsActionTypes = {\r\n  ADD_COIN: \"ADD_COIN\",\r\n};\r\n\r\nexport default CoinsActionTypes;\r\n","import CoinsActionTypes from \"./coins.types\";\r\n\r\nexport const addCoin = (coin) => ({\r\n  type: CoinsActionTypes.ADD_COIN,\r\n  payload: coin,\r\n});\r\n","import React from \"react\";\r\nimport \"./currency-list.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport Coin from \"../coin/coin.component\";\r\n\r\nimport {\r\n  selectSearchText,\r\n  selectUseStatus,\r\n} from \"../../../../redux/search/search.selectors\";\r\nimport { selectListOfCurrencys } from \"../../../../redux/currency/currency.selectors\";\r\nimport { toggleUsed } from \"../../../../redux/search/search.actions\";\r\nimport { addCoin } from \"../../../../redux/coins/coins.actions\";\r\nconst CurrencyList = ({\r\n  searchText,\r\n  currencyList,\r\n  toggleUsed,\r\n  isSearched,\r\n  ...props\r\n}) => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"currency-list\">\r\n      {currencyList\r\n        .filter((coin) =>\r\n          coin.includes(searchText.toUpperCase()) || !searchText.length\r\n            ? coin\r\n            : null\r\n        )\r\n        .map((coin) =>\r\n          searchText.length || isSearched ? (\r\n            (toggleUsed(),\r\n            (<Coin {...props} currency={coin} filtered key={coin} />))\r\n          ) : (\r\n            <Coin {...props} currency={coin} key={coin} />\r\n          )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  searchText: selectSearchText,\r\n  isSearched: selectUseStatus,\r\n  currencyList: selectListOfCurrencys,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCoin: (coin) => dispatch(addCoin(coin)),\r\n  toggleUsed: () => dispatch(toggleUsed()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyList);\r\n","export const selectSearchText = (state) => state.search.searchText;\r\nexport const selectUseStatus = (state) => state.search.used;\r\n","import React from \"react\";\r\nimport SearchInput from \"../homepage/search-input/search-input.component\";\r\nimport CurrencyList from \"../homepage/currency-list/currency-list.component\";\r\nimport \"./homepage.styles.scss\";\r\n\r\nconst Homepage = ({ ...props }) => {\r\n  return (\r\n    <div className=\"content\">\r\n      <SearchInput {...props} />\r\n      <CurrencyList {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectCoin = (state) => (state.coin ? state.coin : {});\r\nexport const selectCoinHistoryData = createSelector(\r\n  [selectCoin],\r\n  (coin) => coin\r\n);\r\n","import React from \"react\";\r\nimport { selectCoinHistoryData } from \"../../../../redux/coin/coin.selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport \"./coin-info.styles.scss\";\r\nconst Coininfo = ({ coin }) => {\r\n  return (\r\n    <div className=\"coin-info\">\r\n      <div className=\"name\">{coin.currency}</div>\r\n      <div className=\"image\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  coin: selectCoinHistoryData,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Coininfo);\r\n","export const dataLine = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      fill: !false,\r\n      lineTension: 0.01,\r\n\r\n      borderColor: \"rgb(64,193,74)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"black\",\r\n      pointBackgroundColor: \"rgb(64,193,74)\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      defaultFontColor: \"rgb(64,193,74)\",\r\n      pointRadius: 0,\r\n      scaleFontSize: 0,\r\n      pointHitRadius: 10,\r\n      data: [],\r\n    },\r\n  ],\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n        hitRadius: 5,\r\n        hoverRadius: 5,\r\n      },\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          display: true,\r\n          gridLines: {\r\n            color: \"rgba(255, 255, 255, 0.05)\",\r\n          },\r\n          ticks: {\r\n            fontFamily: \"Ubuntu\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          gridLines: {\r\n            color: \"rgba(0,0,0,0)\",\r\n            zeroLineColor: \"rgba(0,0,0,0)\",\r\n          },\r\n          ticks: {\r\n            fontFamily: \"Ubuntu\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { Line, defaults } from \"react-chartjs-2\";\r\nimport \"./coin-chart.styles.scss\";\r\ndefaults.global.defaultFontColor = \"rgba(255, 255, 255, 0.5)\";\r\ndefaults.global.legend.display = false;\r\n\r\nconst Coinchart = ({ coin, ...props }) => {\r\n  const { width, height, data, options } = props;\r\n\r\n  const chart = useRef(null);\r\n  if (chart.current !== null) {\r\n    console.log(chart.current.chartInstance);\r\n    chart.current.chartInstance.update();\r\n  }\r\n  return (\r\n    <div className=\"chart\">\r\n      <Line\r\n        ref={chart}\r\n        width={width}\r\n        height={height}\r\n        data={data}\r\n        options={options}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coinchart;\r\n","import React from \"react\";\r\nimport { Line, defaults } from \"react-chartjs-2\";\r\nimport { dataLine } from \"./coin-chart.settings\";\r\nimport { selectCoinHistoryData } from \"../../../../redux/coin/coin.selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport Coinchart from \"./coin-chart.component\";\r\ndefaults.global.defaultFontColor = \"rgba(255, 255, 255, 0.5)\";\r\ndefaults.global.legend.display = false;\r\n\r\nconst CoinchartContainer = ({ coin, filter }) => {\r\n  const timestampToDate = (time) => {\r\n    var date = new Date(time * 1000);\r\n    return (\r\n      date.toDateString().split(\" \")[1] +\r\n      \" \" +\r\n      date.toDateString().split(\" \")[2]\r\n    );\r\n  };\r\n  const loadChartData = () => {\r\n    const chartData = { time: [], price: [] };\r\n\r\n    coin.data.filter((coinData, i) => {\r\n      chartData.time.push(timestampToDate(coinData.time));\r\n      chartData.price.push(coinData.close);\r\n    });\r\n\r\n    dataLine.datasets[0].data = chartData.price.slice(0, filter);\r\n    dataLine.labels = chartData.time.slice(0, filter);\r\n  };\r\n  loadChartData();\r\n\r\n  return <Coinchart data={dataLine} options={dataLine.options} />;\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  coin: selectCoinHistoryData,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CoinchartContainer);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport CoinchartContainer from \"../coin-chart/coin-chart.container\";\r\n\r\nimport \"./coin-chart-filter.styles.scss\";\r\nconst CoinFilter = () => {\r\n  const [filter, setFilter] = useState(30);\r\n  return (\r\n    <>\r\n      <div className=\"coin-filter\">\r\n        <ul tabindex=\"1\">\r\n          <li>\r\n            <button onClick={() => setFilter(3)}>3 days</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => setFilter(7)}>Week</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => setFilter(30)}>Month</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <CoinchartContainer filter={filter} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoinFilter;\r\n","const CoinActionTypes = {\r\n  FETCH_COIN_REQUESTED: \"FETCH_COIN_REQUESTED\",\r\n  FETCH_COIN_FAILED: \"FETCH_COIN_FAILED\",\r\n  FETCH_COIN_SUCCEEDED: \"FETCH_COIN_SUCCEEDED\",\r\n};\r\n\r\nexport default CoinActionTypes;\r\n","import CoinActionTypes from \"./coin.types\";\r\n\r\nexport const fetchCoin = (currency) => ({\r\n  type: CoinActionTypes.FETCH_COIN_REQUESTED,\r\n  payload: currency,\r\n});\r\n\r\nexport const fetchCoinSucceeded = (coin) => ({\r\n  type: CoinActionTypes.FETCH_COIN_SUCCEEDED,\r\n  payload: coin,\r\n});\r\n\r\nexport const fetchCoinFailed = (error) => ({\r\n  type: CoinActionTypes.FETCH_COIN_FAILED,\r\n  payload: error,\r\n});\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport Coininfo from \"./coin-info/coin-info.component\";\r\nimport { connect } from \"react-redux\";\r\nimport CoinFilter from \"./coin-chart-filter/coin-chart-filter.component\";\r\nimport \"./coinpage.styles.scss\";\r\nimport { fetchCoin } from \"../../../redux/coin/coin.actions\";\r\nconst Coinpage = ({ fetchCoin, match }) => {\r\n  useEffect(() => {\r\n    fetchCoin(match.params.name);\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <Coininfo />\r\n      <CoinFilter />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCoin: (currency) => dispatch(fetchCoin(currency)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Coinpage);\r\n","const CurrencyActionTypes = {\r\n  ADD_CURRENCY: \"ADD_CURRENCY\",\r\n};\r\n\r\nexport default CurrencyActionTypes;\r\n","import { addCoin } from \"../redux/coins/coins.actions\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectListOfCurrencys } from \"../redux/currency/currency.selectors\";\r\nimport { addCurrency } from \"../redux/currency/currency.actions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nclass Listener extends React.Component {\r\n  constructor({ addCoin, currencyList, addCurrency }) {\r\n    super();\r\n    this.state = {\r\n      addCoin,\r\n      currencyList,\r\n      addCurrency,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const addCoin = (coin) => this.state.addCoin(coin);\r\n    await fetch(\r\n      `https://min-api.cryptocompare.com/data/top/price?limit=30&tsym=USD`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let currencyArray = data.Data.map((coin) => coin.CoinInfo.Name);\r\n        this.state.addCurrency(currencyArray);\r\n\r\n        data.Data.map((coin) =>\r\n          addCoin({\r\n            FROMSYMBOL: coin.CoinInfo.Name,\r\n            ImageUrl: coin.CoinInfo.ImageUrl,\r\n          })\r\n        );\r\n\r\n        const subs = currencyArray.map((coin) => `5~CCCAGG~${coin}~USD`);\r\n        this.setState({\r\n          subOpen: {\r\n            action: \"SubAdd\",\r\n            subs,\r\n          },\r\n          subClose: {\r\n            action: \"SubRemove\",\r\n            subs,\r\n          },\r\n        });\r\n      });\r\n    const init = () => {\r\n      let { socket, subOpen } = this.state;\r\n\r\n      socket.onopen = function (e) {\r\n        socket.send(JSON.stringify(subOpen));\r\n      };\r\n\r\n      socket.onmessage = function (event) {\r\n        const data = JSON.parse(event.data);\r\n\r\n        if (data.TYPE === \"5\") addCoin(data);\r\n      };\r\n    };\r\n    this.setState(\r\n      {\r\n        socket: new WebSocket(\r\n          \"wss://streamer.cryptocompare.com/v2?api_key=3fcfffe50f77167f3cd04dbad295184f5ac956da429af743be8116d3b6ab6bd3\"\r\n        ),\r\n      },\r\n      () => init.call()\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    let { socket, subClose } = this.state;\r\n\r\n    socket.send(JSON.stringify(subClose));\r\n  }\r\n\r\n  render() {\r\n    return <></>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addCoin: (coin) => dispatch(addCoin(coin)),\r\n  addCurrency: (currency) => dispatch(addCurrency(currency)),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currencyList: selectListOfCurrencys,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Listener);\r\n","import CurrencyActionTypes from \"./currency.types\";\r\n\r\nexport const addCurrency = (currency) => ({\r\n  type: CurrencyActionTypes.ADD_CURRENCY,\r\n  payload: currency,\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.styles.scss\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Link to=\"/crypto-track/\">\r\n        <img src=\"https://bitcoin.org/img/icons/opengraph.png\" />\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import \"./App.css\";\nimport Homepage from \"./components/pages/homepage/homepage.component\";\nimport Coinpage from \"./components/pages/coinpage/coinpage.component\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Listener from \"./utils/Listener\";\nimport Header from \"./components/pages/homepage/header/header.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Route path=\"/crypto-track/\" component={Listener} />\n        <Route exact path=\"/crypto-track/\" component={Homepage} />\n        <Route path=\"/crypto-track/coin/:name\" component={Coinpage} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","export const addCoin = (coins, newCoin) => {\r\n  if (!coins) return [];\r\n  for (let i = 0; i < coins.length; i++) {\r\n    if (coins[i].FROMSYMBOL === newCoin.FROMSYMBOL) {\r\n      coins[i] = { ...coins[i], ...newCoin };\r\n      // Object.assign(coins[i], newCoin);\r\n      return coins;\r\n    }\r\n  }\r\n\r\n  coins.push(newCoin);\r\n  return coins;\r\n};\r\n","import { addCoin } from \"./coins.utils\";\r\nimport CoinsActionTypes from \"./coins.types\";\r\n\r\nconst INITIAL_STATE = { data: [] };\r\n\r\nconst coinReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CoinsActionTypes.ADD_COIN:\r\n      return { data: addCoin(state.data, action.payload) };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default coinReducer;\r\n","import CoinActionTypes from \"./coin.types\";\r\n\r\nconst INITIAL_STATE = { data: [], message: {} };\r\n\r\nconst coinReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CoinActionTypes.FETCH_COIN_REQUESTED:\r\n      return { ...state };\r\n    case CoinActionTypes.FETCH_COIN_SUCCEEDED:\r\n      return { data: action.payload.data, currency: action.payload.currency };\r\n    case CoinActionTypes.FETCH_COIN_FAILED:\r\n      return { message: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default coinReducer;\r\n","import { changeSearchText } from \"./search.utils\";\r\nconst INITIAL_STATE = { searchText: \"\", used: false };\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_TEXT\":\r\n      return { ...state, searchText: changeSearchText(action.payload) };\r\n    case \"TOGGLE_USED\":\r\n      return { ...state, used: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import CurrencyActionTypes from \"./currency.types\";\r\n\r\nconst INITIAL_STATE = { data: [] };\r\n\r\nconst currencyReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CurrencyActionTypes.ADD_CURRENCY:\r\n      return { ...state, data: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default currencyReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport coinsReducer from \"./coins/coins.reducer\";\r\nimport coinReducer from \"./coin/coin.reducer\";\r\nimport searchReducer from \"./search/search.reducers\";\r\nimport currencyReducer from \"./currency/currency.reducer\";\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"search\", \"currency\"],\r\n  whitelist: [\"coins\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  coins: coinsReducer,\r\n  search: searchReducer,\r\n  currency: currencyReducer,\r\n  coin: coinReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { fetchCoinSucceeded, fetchCoinFailed } from \"./coin.actions\";\r\nimport CoinActionTypes from \"./coin.types\";\r\n\r\nfunction* fetchCoinAsync(action) {\r\n  try {\r\n    const coin = yield fetch(\r\n      `https://min-api.cryptocompare.com/data/v2/histoday?fsym=${action.payload}&tsym=USD&limit=30`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => json.Data);\r\n\r\n    yield put(\r\n      fetchCoinSucceeded({ data: [...coin.Data], currency: action.payload })\r\n    );\r\n  } catch (e) {\r\n    yield put(fetchCoinFailed(e.message));\r\n  }\r\n}\r\nexport function* fetchCoinStart() {\r\n  yield takeEvery(CoinActionTypes.FETCH_COIN_REQUESTED, fetchCoinAsync);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fetchCoinStart } from \"./coin/coin.sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\nif (process.env.NODE_ENV === \"development\") middlewares.push(logger);\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(fetchCoinStart);\r\nexport const persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}